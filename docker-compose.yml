version: '3.9'

services:
  postgres:
    image: ankane/pgvector:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-snapzy}
      POSTGRES_USER: ${POSTGRES_USER:-snapzy}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-snapzy}
    ports:
      - '5432:5432'
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./db/postgres/migrations:/data/migrations:ro
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER']
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  cassandra:
    image: cassandra:4.1
    environment:
      - CASSANDRA_CLUSTER_NAME=SnapzyCluster
      - CASSANDRA_NUM_TOKENS=16
    ports:
      - '9042:9042'
    volumes:
      - cassandra_data:/var/lib/cassandra

  opensearch:
    image: opensearchproject/opensearch:2
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - '9200:9200'

  dashboards:
    image: opensearchproject/opensearch-dashboards:2
    environment:
      - OPENSEARCH_HOSTS=["http://opensearch:9200"]
      - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true
    ports:
      - '5601:5601'
    depends_on:
      - opensearch

  minio:
    image: minio/minio:RELEASE.2024-04-18T19-09-19Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY:-minioadmin}
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio_data:/data

  create-bucket:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: /bin/sh -c
    command: >
      "mc alias set local http://minio:9000 ${S3_ACCESS_KEY:-minioadmin} ${S3_SECRET_KEY:-minioadmin};
      mc mb --ignore-existing local/${S3_BUCKET:-snapzy-media};
      mc anonymous set download local/${S3_BUCKET:-snapzy-media};"

  jaeger:
    image: jaegertracing/all-in-one:1.52
    ports:
      - '16686:16686'
      - '4317:4317'

  prometheus:
    image: prom/prometheus
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - '9090:9090'

  grafana:
    image: grafana/grafana
    ports:
      - '3001:3000'
    volumes:
      - grafana_data:/var/lib/grafana

  api:
    build: ./services/api
    env_file: .env
    environment:
      NODE_ENV: development
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317
    ports:
      - '4000:4000'
    depends_on:
      - postgres
      - redis
      - opensearch
      - minio
    command: ["bash","-lc","npm run start:prod"]

  ai:
    build: ./services/ai
    env_file: .env
    ports:
      - '5000:5000'
    depends_on:
      - opensearch

  realtime:
    build: ./services/realtime
    env_file: .env
    ports:
      - '4100:4100'
    depends_on:
      - redis
      - cassandra

  media:
    build: ./services/media
    env_file: .env
    ports:
      - '4200:4200'
    depends_on:
      - minio

  web:
    build: ./apps/web
    env_file: .env
    environment:
      NEXT_PUBLIC_API_BASE_URL: http://localhost:4000
      NEXT_PUBLIC_WS_BASE_URL: ws://localhost:4100
    ports:
      - '3000:3000'
    depends_on:
      - api

volumes:
  pg_data: {}
  redis_data: {}
  cassandra_data: {}
  minio_data: {}
  grafana_data: {}